version: 2.1
jobs:
  build: &build
    machine: true
    steps:
      - checkout
      - run:
          name: Prepare env vars & img tags
          command: |
            mkdir env
            touch env/env_vars
            touch env/img_tags
            if [[ -n "${BAREOS_BACKEND}" ]]
            then 
              echo "BUILD_TAG=${CIRCLE_BRANCH}-${BASE_IMG}-${BAREOS_BACKEND}" >> env/env_vars
              echo "BAREOS_PATH=${BAREOS_COMP}-${BAREOS_BACKEND}" >> env/env_vars
            else
              echo "BUILD_TAG=${CIRCLE_BRANCH}-${BASE_IMG}" >> env/env_vars
              echo "BAREOS_PATH=${BAREOS_COMP}" >> env/env_vars
            fi

            if [[ "${BASE_IMG}" == "ubuntu" ]] && [[ "${BAREOS_BACKEND}" != "pgsql" ]]
            then
              echo "${CIRCLE_BRANCH}" >> env/img_tags
              if [[ "${CIRCLE_BRANCH}" == "19" ]]
              then
                echo "latest" >> env/img_tags
              fi
            fi
      - run:
          name: Docker build
          command: |
            source env/env_vars
            docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 -t barcus/bareos-${BAREOS_COMP}:${BUILD_TAG} ${BAREOS_PATH}/${BASE_IMG}
      - run:
          name: Save images
          command: |
            source env/env_vars
            mkdir images
            docker save -o images/image-${BAREOS_PATH}-${BASE_IMG}.tar barcus/bareos-${BAREOS_COMP}:${BUILD_TAG}
      - persist_to_workspace:
          root: .
          paths:
            - ./images
            - ./env

  deploy: &deploy
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load image and add tags
          command: |
            source /tmp/workspace/env/env_vars
            docker load -i /tmp/workspace/images/image-${BAREOS_PATH}-${BASE_IMG}.tar
            while read tag
            do
              docker tag barcus/bareos-${BAREOS_COMP}:${BUILD_TAG} barcus/bareos-${BAREOS_COMP}:${tag}
            done < /tmp/workspace/env/img_tags
      - run: 
          name: Docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Docker push
          command: |
            source /tmp/workspace/env/env_vars
            docker push barcus/bareos-${BAREOS_COMP}:${BUILD_TAG}
            while read tag
            do
              docker push barcus/bareos-${BAREOS_COMP}:${tag}
            done < /tmp/workspace/env/img_tags

  # Build Ubuntu images
  build-director-ubuntu-mysql:
     <<: *build
     environment:
       - BAREOS_COMP: director
       - BAREOS_BACKEND: mysql
       - BASE_IMG: ubuntu
  build-director-ubuntu-pgsql:
     <<: *build
     environment:
       - BAREOS_COMP: director
       - BAREOS_BACKEND: pgsql
       - BASE_IMG: ubuntu
  build-client-ubuntu:
     <<: *build
     environment:
       - BAREOS_COMP: client
       - BASE_IMG: ubuntu
  build-storage-ubuntu:
     <<: *build
     environment:
       - BAREOS_COMP: storage
       - BASE_IMG: ubuntu
  build-webui-ubuntu:
     <<: *build
     environment:
       - BAREOS_COMP: webui
       - BASE_IMG: ubuntu

  # Build Alpine images
  build-director-alpine:
     <<: *build
     environment:
       - BAREOS_COMP: director
       - BAREOS_BACKEND: mysql
       - BASE_IMG: alpine
  build-client-alpine:
     <<: *build
     environment:
       - BAREOS_COMP: client
       - BASE_IMG: alpine
  build-storage-alpine:
     <<: *build
     environment:
       - BAREOS_COMP: storage
       - BASE_IMG: alpine
  build-webui-alpine:
     <<: *build
     environment:
       - BAREOS_COMP: webui
       - BASE_IMG: alpine

  # Deploy Ubuntu images
  deploy-director-ubuntu-mysql:
     <<: *deploy
     environment:
       - BAREOS_COMP: director
       - BAREOS_BACKEND: mysql
       - BASE_IMG: ubuntu
  deploy-director-ubuntu-pgsql:
     <<: *deploy
     environment:
       - BAREOS_COMP: director
       - BAREOS_BACKEND: pgsql
       - BASE_IMG: ubuntu
  deploy-client-ubuntu:
     <<: *deploy
     environment:
       - BAREOS_COMP: client
       - BASE_IMG: ubuntu
  deploy-storage-ubuntu:
     <<: *deploy
     environment:
       - BAREOS_COMP: storage
       - BASE_IMG: ubuntu
  deploy-webui-ubuntu:
     <<: *deploy
     environment:
       - BAREOS_COMP: webui
       - BASE_IMG: ubuntu

  # Deploy Ubuntu images
  deploy-director-alpine:
     <<: *deploy
     environment:
       - BAREOS_COMP: director
       - BAREOS_BACKEND: mysql
       - BASE_IMG: alpine
  deploy-client-alpine:
     <<: *deploy
     environment:
       - BAREOS_COMP: client
       - BASE_IMG: alpine
  deploy-storage-alpine:
     <<: *deploy
     environment:
       - BAREOS_COMP: storage
       - BASE_IMG: alpine
  deploy-webui-alpine:
     <<: *deploy
     environment:
       - BAREOS_COMP: webui
       - BASE_IMG: alpine

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build-director-ubuntu-mysql
      - build-director-ubuntu-pgsql
      - build-client-ubuntu
      - build-storage-ubuntu
      - build-webui-ubuntu
      #- build-director-alpine
      #- build-client-alpine
      #- build-storage-alpine
      #- build-webui-alpine
      - deploy-director-ubuntu-mysql:
          requires:
            - build-director-ubuntu-mysql
      - deploy-director-ubuntu-pgsql:
          requires:
            - build-director-ubuntu-pgsql
      - deploy-client-ubuntu:
          requires:
            - build-client-ubuntu
      - deploy-storage-ubuntu:
          requires:
            - build-storage-ubuntu
      - deploy-webui-ubuntu:
          requires:
            - build-webui-ubuntu
      #- deploy-director-alpine:
      #    requires:
      #      - build-director-alpine
      #- deploy-client-alpine:
      #    requires:
      #      - build-client-alpine
      #- deploy-storage-alpine:
      #    requires:
      #      - build-storage-alpine
      #- deploy-webui-alpine:
      #    requires:
      #      - build-webui-alpine
